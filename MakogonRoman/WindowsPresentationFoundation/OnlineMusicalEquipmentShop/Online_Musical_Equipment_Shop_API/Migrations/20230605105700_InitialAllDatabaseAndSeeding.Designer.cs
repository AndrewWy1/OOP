// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Online_Musical_Equipment_Shop_DAL.Context;

#nullable disable

namespace Online_Musical_Equipment_Shop_API.Migrations
{
    [DbContext(typeof(MusicalEquipmentShopContext))]
    [Migration("20230605105700_InitialAllDatabaseAndSeeding")]
    partial class InitialAllDatabaseAndSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Online_Musical_Equipment_Shop_DAL.Entities.Categories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryTitle")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Online_Musical_Equipment_Shop_DAL.Entities.Countries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountriesTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CountriesTitle")
                        .IsUnique();

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aa1df7e3-fa8f-4a1d-9e0b-4e623e72a40e"),
                            CountriesTitle = "Nauru"
                        },
                        new
                        {
                            Id = new Guid("7dba1741-6469-4d9c-b40a-333941f9e253"),
                            CountriesTitle = "Jamaica"
                        },
                        new
                        {
                            Id = new Guid("275bc5ba-d018-42b9-94d9-51223885133f"),
                            CountriesTitle = "South Georgia and the South Sandwich Islands"
                        },
                        new
                        {
                            Id = new Guid("c21b3a08-629f-4e43-aa24-3b7b010a9521"),
                            CountriesTitle = "Brazil"
                        },
                        new
                        {
                            Id = new Guid("ea57e523-1b57-470d-98c7-cf42709d49e8"),
                            CountriesTitle = "Cuba"
                        },
                        new
                        {
                            Id = new Guid("697dae8f-d1f3-45c2-8e6c-df50d3a905ad"),
                            CountriesTitle = "Western Sahara"
                        },
                        new
                        {
                            Id = new Guid("3648f415-b813-4858-aa44-d0ae0526ee86"),
                            CountriesTitle = "Israel"
                        },
                        new
                        {
                            Id = new Guid("9fb06550-24a3-4190-839d-698343fdcd82"),
                            CountriesTitle = "Isle of Man"
                        },
                        new
                        {
                            Id = new Guid("30c1fdcd-119b-48ff-bff0-8431a487bd4c"),
                            CountriesTitle = "Argentina"
                        },
                        new
                        {
                            Id = new Guid("b6b17bcd-f250-4b6b-bf1b-91e6f12cb166"),
                            CountriesTitle = "Eritrea"
                        },
                        new
                        {
                            Id = new Guid("a12b7259-70b5-416b-a05d-e7ebddd9a334"),
                            CountriesTitle = "Suriname"
                        },
                        new
                        {
                            Id = new Guid("fefbc21f-1363-4d5c-8a9c-a07a80e2b553"),
                            CountriesTitle = "Netherlands"
                        },
                        new
                        {
                            Id = new Guid("cb95fb58-d5cb-420b-bb8f-e3b02182084d"),
                            CountriesTitle = "Gibraltar"
                        },
                        new
                        {
                            Id = new Guid("39c90a69-0453-4512-962c-eeb511678557"),
                            CountriesTitle = "Denmark"
                        },
                        new
                        {
                            Id = new Guid("bafbb5f1-7532-4298-b605-2e9937fdd234"),
                            CountriesTitle = "Namibia"
                        });
                });

            modelBuilder.Entity("Online_Musical_Equipment_Shop_DAL.Entities.Instruments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstrumentTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoriesId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Instruments");
                });

            modelBuilder.Entity("Online_Musical_Equipment_Shop_DAL.Entities.Items", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountriesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstrumentsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CountriesId");

                    b.HasIndex("InstrumentsId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Online_Musical_Equipment_Shop_DAL.Entities.Manufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountriesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountriesId");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("Online_Musical_Equipment_Shop_DAL.Entities.Instruments", b =>
                {
                    b.HasOne("Online_Musical_Equipment_Shop_DAL.Entities.Categories", "Categories")
                        .WithMany("Instruments")
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Online_Musical_Equipment_Shop_DAL.Entities.Manufacturer", "Manufacturer")
                        .WithMany("Instruments")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categories");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Online_Musical_Equipment_Shop_DAL.Entities.Items", b =>
                {
                    b.HasOne("Online_Musical_Equipment_Shop_DAL.Entities.Countries", "Countries")
                        .WithMany("Items")
                        .HasForeignKey("CountriesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Online_Musical_Equipment_Shop_DAL.Entities.Instruments", "Instruments")
                        .WithMany("Items")
                        .HasForeignKey("InstrumentsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Countries");

                    b.Navigation("Instruments");
                });

            modelBuilder.Entity("Online_Musical_Equipment_Shop_DAL.Entities.Manufacturer", b =>
                {
                    b.HasOne("Online_Musical_Equipment_Shop_DAL.Entities.Countries", "Countries")
                        .WithMany("Manufacturers")
                        .HasForeignKey("CountriesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Countries");
                });

            modelBuilder.Entity("Online_Musical_Equipment_Shop_DAL.Entities.Categories", b =>
                {
                    b.Navigation("Instruments");
                });

            modelBuilder.Entity("Online_Musical_Equipment_Shop_DAL.Entities.Countries", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Manufacturers");
                });

            modelBuilder.Entity("Online_Musical_Equipment_Shop_DAL.Entities.Instruments", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Online_Musical_Equipment_Shop_DAL.Entities.Manufacturer", b =>
                {
                    b.Navigation("Instruments");
                });
#pragma warning restore 612, 618
        }
    }
}
